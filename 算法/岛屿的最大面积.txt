class Solution {
    int[] dx = {-1,0,1,0};
    int[] dy = {0,-1,0,1};
    int maxAns = 0;
    public int maxAreaOfIsland(int[][] grid) {
      int n = grid.length;
      int m  = grid[0].length;
      for (int i = 0;i < n ;i ++) {
          for(int j = 0 ;j < m; j ++ ) {
              if (grid[i][j] == 1) {
                 maxAns = Math.max(maxAns,dfs(grid,i,j));
              }
          }
      }
      if (maxAns == 0 ) {        
          return 0;
      }else {
          return maxAns;
      }
    }
    public int dfs (int[][] grid,int x,int y) {   //应当注意，在遇到0时或者其他不满足的情况时，应当返回0，不然会出现异常
     if (x < 0 || x == grid.length || y <0 || y == grid[0].length || grid[x][y] != 1) {
                 return 0 ;
         }
             grid[x][y] = 0;
             int count = 1;  //count 应当为局部变量，而不应为全局变量
          for (int i = 0; i < 4; i ++){
             int mx = x + dx[i],my = y + dy[i];
              count += dfs(grid,mx,my);
             }
        return count;
    }
}